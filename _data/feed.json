{"feed":{"updated":"2021-12-28T16:22:26+09:00","title":"default.cf/blog","link":"","subtitle":"ヲタクな話を書きます。","generator":"Jekyll","id":"https://default.cf/blog/feed.xml","entry":[{"published":"2021-12-26T00:00:00+09:00","category":[""],"link":"","title":"Oculus Quest 2 を買って VRChat にハマっている","content":"<p>体験しないと、きっとこの良さは分からない。</p>\n\n<p><img src=\"/blog/assets/img/2021-12-26-oculus-quest-2/wolf-rest-and-sleep.png\" alt=\"wolf-rest-and-sleep\" /></p>\n\n<p>ワールド『<a href=\"https://vrchat.com/home/world/wrld_fac11e5f-1c73-4436-8936-a70b80961c5a\">Rest and Sleep 寝る</a>』にて、私の VR での姿。</p>\n\n<hr />\n\n<p>2021年後半は、VR の話題が尽きなかったように思う。</p>\n\n<ul>\n  <li>Facebook, inc は Meta, inc（Meta Platforms, inc）という名に変わって、VR 関連に力を入れることを宣言した。\n    <ul>\n      <li><a href=\"https://about.fb.com/ja/news/2021/10/facebok-company-is-now-meta/\">https://about.fb.com/ja/news/2021/10/facebok-company-is-now-meta/</a></li>\n    </ul>\n  </li>\n  <li>ANYCOLOR 株式会社はユメノグラフィアの終了を発表した…\n    <ul>\n      <li><a href=\"https://note.com/yume_note1205/n/nb2f04ec86d10\">https://note.com/yume_note1205/n/nb2f04ec86d10</a></li>\n      <li>やっぱまだまだ HMD が普及してないからかな…</li>\n    </ul>\n  </li>\n  <li>今年も Vket が開催された。\n    <ul>\n      <li><a href=\"https://winter2021.vket.com/\">https://winter2021.vket.com/</a></li>\n    </ul>\n  </li>\n  <li>SANRIO Virtual Fes が開催され、多くの話題を呼んだ。\n    <ul>\n      <li><a href=\"https://v-fes.sanrio.co.jp/\">https://v-fes.sanrio.co.jp/</a></li>\n    </ul>\n  </li>\n</ul>\n\n<p>特に SANRIO Virtual Fes は、開催後の各種記事を読んで、行かなかったことを後悔した。\n“AMOKA が遂に大きな舞台に立った”、”キヌのライブに度肝を抜かれた”、”バーチャル四天王らのパフォーマンスが凄かった”、”初音ミクとキノピオピーのコラボがヤバかった”、”地下5階のクラブがヤバかった”、などなど。</p>\n\n<p><a href=\"https://vr-lifemagazine.com/sanrio-virtual-fes-in-sanrio-puroland-report/\">https://vr-lifemagazine.com/sanrio-virtual-fes-in-sanrio-puroland-report/</a></p>\n\n<p>気になりすぎていろんな記事を漁ったが、やはり実際に体験してみないと分からないことが多すぎた。</p>\n\n<p>大盛況だったことは間違いないようなので、きっとまたこういうイベントはやるだろう。\nその時にまたこういう後悔をしたくない。</p>\n\n<p>そう思い、Oculus Quest 2 を買った。ついでに PCVR をやりたかったので CPU を替え、その過程でマザーボードもメモリも替えた。</p>\n\n<hr />\n\n<p>とりあえず VRChat をやっている。\n2017年くらいに少し遊んだアカウントがあったので、それでログインしている。 <a href=\"https://docs.vrchat.com/docs/vrchat-safety-and-trust-system\">トラストランク</a> はまだ「Visitor」だった。</p>\n\n<p>「VRChatワールド探検部」というグループの方々が <a href=\"https://adventar.org/calendars/6950\">Advent Calendar</a> でいろんなワールドを紹介しているのを見つけて、それを参考にワールドを巡ったりしている。</p>\n\n<p><a href=\"https://sites.google.com/view/shaderfes\">Shader Fes 2021</a> という、シェーダーをめちゃめちゃ活用した展示物がめちゃめちゃ展示されてるワールドも楽しんでいる。</p>\n\n<p><img src=\"/blog/assets/img/2021-12-26-oculus-quest-2/groupphoto-at-shaderfes.png\" alt=\"groupphoto-at-shaderfes\" /></p>\n\n<hr />\n\n<p>色々遊んでいると、トラストランクが「New user」になった。</p>\n\n<p>早速 booth で可愛らしい3Dモデルを探した。めちゃめちゃある。\nその中で一番ピンと来た子を選んだ。名を大神ルゥと言う。</p>\n\n<p><a href=\"https://booth.pm/ja/items/1845778\">https://booth.pm/ja/items/1845778</a></p>\n\n<p>可愛い。</p>\n\n<p>しかし購入した後に気付いたのだが、このモデルは VRC SDK v3 に対応していない（2021年12月26日現在）。\nREADME 通りにアップロードしようとすると、エラーが表示される。</p>\n\n<p>今は非推奨の SDK v2 を使うのもアリではあるが、せっかくなので自分でv3用に修正して、無事アップロードできた。</p>\n\n<p>参考: <a href=\"https://kurotorimkdocs.gitlab.io/kurotorimemo/010-VR/010_VRChat/Avatars3.0/ToAvatars3/\">https://kurotorimkdocs.gitlab.io/kurotorimemo/010-VR/010_VRChat/Avatars3.0/ToAvatars3/</a></p>\n\n<p><img src=\"/blog/assets/img/2021-12-26-oculus-quest-2/surprised-wolf.png\" alt=\"wolf-with-hamburger\" /></p>\n\n<p>可愛い！</p>\n\n<p><img src=\"/blog/assets/img/2021-12-26-oculus-quest-2/wolf-with-hamburger.png\" alt=\"wolf-with-hamburger\" /></p>\n\n<p>可愛い！！\n（なんか可愛いので、びっくりしてる顔ばかり撮ってしまう）</p>\n\n<p>ライセンス的に改造が許可されているので、髪と胸の揺れを調整したり、表情の微修正をしたり。\nしかし、久々に Unity 触った。 <a href=\"https://scrapbox.io/defaultcf/Unity%E3%81%AE%E3%83%97%E3%83%AD%E3%82%B8%E3%82%A7%E3%82%AF%E3%83%88%E3%82%92git%E7%AE%A1%E7%90%86%E3%81%99%E3%82%8B\">なんとか Git 管理して、いつでも特定のコミットに戻れるようにしている。</a></p>\n\n<p>今後は、Blender も扱えるようになりたいし、ワールドを作ったりしてみたい。\nやりたいことだらけで、睡眠時間が削れるのが悩みどころ。</p>\n\n<hr />\n\n<p>こう美少女として VRChat で遊んでいると、かつて自分が VTuber にドハマりして最初の頃に書いた呟きを思い出す。まぁありふれた考えだが。</p>\n\n<blockquote>\n  <p>VTuberの良さとは、その人の外見・生まれ・性別・年齢など、あらゆる属性を排除した状態で配信を行うことができるという点にある（声すらボイチェンで変えられる）。\nhttps://scrapbox.io/defaultcf/VTuber</p>\n</blockquote>\n\n<p>遂に自分も VR で他の誰かになれる日が来たのだと思うと胸アツだ。\n今はリアルで知り合った者同士で遊んでいるが、近々 VRChat で知り合って遊ぶという経験をしてみたいものである。</p>\n\n<p>VRChat でお会いしましょう ;)</p>","updated":"2021-12-26T00:00:00+09:00","summary":"体験しないと、きっとこの良さは分からない。","author":{"name":""},"id":"https://default.cf/blog/2021/12/26/oculus-quest-2"},{"author":{"name":""},"summary":"こんにちは！ この記事は、GIG Advent Calendar の11日目の記事です。遅れてすみません！","id":"https://default.cf/blog/2021/12/11/selinux-01","category":["",""],"published":"2021-12-11T00:00:00+09:00","title":"log4j の脆弱性は SELinux で防げるか？","link":"","content":"<p>こんにちは！\nこの記事は、GIG Advent Calendar の11日目の記事です。遅れてすみません！</p>\n\n<p>log4j の脆弱性の件で各所大変なことになっていますね…\n幸い私はその対応に終われることはありませんでしたが…</p>\n\n<p>私が稀に嗜んでいる Minecraft でも、バージョン16以下であれば log4j の脆弱性を抱えているらしいです。\n会社ではインフラエンジニアをやっているので、如何に脆弱性による被害を抑えられるかが気になります。</p>\n\n<p>そこでこの記事では log4j と、インフラエンジニア（1年目）から見た脆弱性による被害を最小限に抑える方法について考えます。\n1年目なので。。。色々大目に見てください。。。\nもし間違いがあったら、是非記事にプルリクを送っていただければと思います。</p>\n\n<h1 id=\"log4j\">log4j</h1>\n<p>log4j は、Java のロギングのライブラリらしいです。\n今回知ったのですが、このライブラリはいろんなプロダクトに含まれているのですね…</p>\n\n<p>https://logging.apache.org/log4j/2.x/</p>\n\n<h1 id=\"攻撃\">攻撃</h1>\n<p>様々な機能を備えており、その中でも Lookup という変数を使える機能が問題のようです。\n試しにプライベートネットワーク上に Minecraft サーバを立てて、攻撃できる環境を色々用意してみた結果、確かに実行できそうでした。\n手法について詳しく書いたら警察のご厄介になるかも分からないので、これ以上書きません。防ぐ方法を考えるのがメインですし、ね。</p>\n\n<p>https://www.jpcert.or.jp/at/2021/at210050.html</p>\n\n<h1 id=\"対応策\">対応策</h1>\n<p>AWS WAF のマネージドルールに、今回の脆弱性を対象とした攻撃を防ぐルールが追加されたようです。\nhttps://dev.classmethod.jp/articles/aws-waf-new-rule-log4jrce/</p>\n\n<p>また SELinux を使って、ターゲットのプロセスがあらかじめ指定したディレクトリ外を読み書きするのを防いだり、\n指定したプロセス以外を起動するのを防いだり、外部の LDAP サーバとの通信を防いだりできるんじゃないかなと思っています。</p>\n\n<p>ただし、ポリシーは正しく書かなければ意味が無いですし、SELinux は最後の砦みたいなところがあるので\nこれに頼りきりにならずに、そもそも log4j の設定を見直したりして脆弱性を塞ぐ努力をするのが最優先でしょう。</p>\n\n<hr />\n\n<p>すみません、今回の記事はここまでです。</p>\n\n<p>攻撃できる環境を用意するだけで土日を使い果たしました…LDAP がよく分からず、LDAP の勉強から始めてました…\nSELinux で攻撃の影響を抑えられるような設定とか調べて、また記事書きます、きっと。</p>","updated":"2021-12-11T00:00:00+09:00"},{"author":{"name":""},"summary":"需要が無いかもしれない技術メモ。","id":"https://default.cf/blog/2021/10/24/jekyll-fetch-other-jekyll","published":"2021-10-24T00:00:00+09:00","category":["",""],"link":"","title":"Jekyll で 他の Jekyll から情報を取得する","content":"<p>需要が無いかもしれない技術メモ。</p>\n\n<p>Jekyll で作っている2つのサイトがある。</p>\n<ul>\n  <li><a href=\"https://default.cf/\">default.cf</a> ←ポートフォリオサイト</li>\n  <li><a href=\"https://default.cf/blog/\">default.cf/blog</a> ←ブログ</li>\n</ul>\n\n<p>同じドメインでホストしているが、これらは別々のリポジトリで GitHub Pages を使ってビルドされている。そのため、静的ビルド時にリポジトリを跨いで情報を取得・反映するには一手間要る。JavaScript で fetch, parse, render は、SEO の観点からしないものとする。</p>\n\n<p>今回は、ポートフォリオサイト上にブログのリンクを表示したい。\n色々考えた末、jekyll-feed で生成される feed.xml を、何らかの方法でポートフォリオの <code class=\"language-plaintext highlighter-rouge\">_data/feed.json</code> に置くことができれば良いとなった。</p>\n\n<p>技術的には次の挑戦が必要だった。</p>\n<ul>\n  <li>XML ファイルを JSON ファイルに変換する</li>\n  <li>ポートフォリオサイトの GitHub Actions で XML ファイルの取得、JSON ファイルへの変換、コミット</li>\n  <li>ブログを書いて master にプッシュしたら、ポートフォリオサイトの action が発火され更新される</li>\n</ul>\n\n<p>順に説明する。</p>\n\n<h2 id=\"xml-ファイルを-json-ファイルに変換する\">XML ファイルを JSON ファイルに変換する</h2>\n\n<p>xml2json を使って変換することにした。\n詳しくは Scrapbox に書いた。</p>\n\n<ul>\n  <li><a href=\"https://scrapbox.io/defaultcf/xml2json\">scrapbox.io/defaultcf/xml2json</a></li>\n  <li><a href=\"https://scrapbox.io/defaultcf/XML_Schema\">scrapbox.io/defaultcf/XML_Schema</a></li>\n</ul>\n\n<p>XML Schema を頑張って書いて、変換できることを確認した。\nただ一箇所、XML 側を修正しないとどうしても変換できないところがあって、そこは処理前に sed で置換することにした。</p>\n<div class=\"language-bash highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nb\">sed</span> <span class=\"nt\">-e</span> <span class=\"s1\">'s/xmlns:atom=/xmlns:atom=/'</span>\n</code></pre></div></div>\n\n<h2 id=\"ポートフォリオサイトの-github-actions-で-xml-ファイルの取得json-ファイルへの変換コミット\">ポートフォリオサイトの GitHub Actions で XML ファイルの取得、JSON ファイルへの変換、コミット</h2>\n<p>試行錯誤して最終的にこうなった。</p>\n\n<p><code class=\"language-plaintext highlighter-rouge\">.github/workflows/create-blog-links.yml</code></p>\n<div class=\"language-yaml highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"na\">name</span><span class=\"pi\">:</span> <span class=\"s\">Create blog links</span>\n<span class=\"na\">on</span><span class=\"pi\">:</span> <span class=\"s\">workflow_dispatch</span>\n<span class=\"na\">jobs</span><span class=\"pi\">:</span>\n  <span class=\"na\">fetch-and-create</span><span class=\"pi\">:</span>\n    <span class=\"na\">runs-on</span><span class=\"pi\">:</span> <span class=\"s\">ubuntu-latest</span>\n    <span class=\"na\">steps</span><span class=\"pi\">:</span>\n      <span class=\"pi\">-</span> <span class=\"na\">run</span><span class=\"pi\">:</span> <span class=\"s\">sudo apt update &amp;&amp; sudo apt install -y libxml-compile-perl libjson-xs-perl</span>\n      <span class=\"pi\">-</span> <span class=\"na\">uses</span><span class=\"pi\">:</span> <span class=\"s\">actions/checkout@v2</span>\n      <span class=\"pi\">-</span> <span class=\"na\">run</span><span class=\"pi\">:</span> <span class=\"pi\">|</span>\n          <span class=\"s\">curl https://default.cf/blog/feed.xml \\</span>\n            <span class=\"s\">| sed -e 's/xmlns:atom=/xmlns:atom=/' \\</span>\n            <span class=\"s\">| xml2json -x - -s feed.xsd \\</span>\n            <span class=\"s\">&gt; _data/feed.json</span>\n      <span class=\"pi\">-</span> <span class=\"na\">uses</span><span class=\"pi\">:</span> <span class=\"s\">EndBug/add-and-commit@v7</span>\n        <span class=\"na\">with</span><span class=\"pi\">:</span>\n          <span class=\"na\">message</span><span class=\"pi\">:</span> <span class=\"s1\">'</span><span class=\"s\">Update</span><span class=\"nv\"> </span><span class=\"s\">feed.json'</span>\n          <span class=\"na\">committer_name</span><span class=\"pi\">:</span> <span class=\"s\">GitHub Actions</span>\n          <span class=\"na\">committer_email</span><span class=\"pi\">:</span> <span class=\"s\">41898282+github-actions[bot]@users.noreply.github.com</span>\n</code></pre></div></div>\n\n<p>uses を使って checkout と commit は簡単に済ませられる。GitHub Marketplace 様様だ。</p>\n\n<p>手動で workflow を実行して、feed 取得・JSON に変換・コミットが為されることを確認する。</p>\n\n<h2 id=\"ブログを書いて-master-にプッシュしたらポートフォリオサイトの-action-が発火され更新される\">ブログを書いて master にプッシュしたら、ポートフォリオサイトの action が発火され更新される</h2>\n<p>GitHub REST API を叩いて、他の workflow を発火することができるらしい。\nブログ側の action をこのように書いた。<del>これでいけるはず…</del></p>\n\n<p>GITHUB_TOKEN の部分は、secrets.GITHUB_TOKEN を使うと失敗する。\n<a href=\"https://docs.github.com/en/actions/security-guides/encrypted-secrets#using-encrypted-secrets-in-a-workflow\">https://docs.github.com/en/actions/security-guides/encrypted-secrets#using-encrypted-secrets-in-a-workflow</a></p>\n\n<blockquote>\n  <p>you can use the secrets context to access secrets you’ve created in your repository</p>\n</blockquote>\n\n<p><code class=\"language-plaintext highlighter-rouge\">secrets.GITHUB_TOKEN</code> は、そのアクション1回限りで有効で、且つそのリポジトリにだけ機能するアクセス権限が与えられる。\nつまり、他のリポジトリの workflow を発火できない。</p>\n\n<p>ここでのトークンは、personal access token を使うことにした。\nrepo 全てと、workflow にチェックを入れた。</p>\n\n<p><code class=\"language-plaintext highlighter-rouge\">.github/workflows/kick-portfolio.yml</code></p>\n<div class=\"language-yaml highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"na\">name</span><span class=\"pi\">:</span> <span class=\"s\">Kick portfolio</span>\n<span class=\"na\">on</span><span class=\"pi\">:</span>\n  <span class=\"na\">push</span><span class=\"pi\">:</span>\n    <span class=\"na\">branches</span><span class=\"pi\">:</span>\n      <span class=\"pi\">-</span> <span class=\"s\">master</span>\n<span class=\"na\">jobs</span><span class=\"pi\">:</span>\n  <span class=\"na\">post-api</span><span class=\"pi\">:</span>\n    <span class=\"na\">runs-on</span><span class=\"pi\">:</span> <span class=\"s\">ubuntu-latest</span>\n    <span class=\"na\">steps</span><span class=\"pi\">:</span>\n      <span class=\"pi\">-</span> <span class=\"na\">uses</span><span class=\"pi\">:</span> <span class=\"s\">octokit/request-action@v2.x</span>\n        <span class=\"na\">with</span><span class=\"pi\">:</span>\n          <span class=\"na\">route</span><span class=\"pi\">:</span> <span class=\"s\">POST /repos/{owner}/{repo}/actions/workflows/{workflow_id}/dispatches</span>\n          <span class=\"na\">owner</span><span class=\"pi\">:</span> <span class=\"s\">defaultcf</span>\n          <span class=\"na\">repo</span><span class=\"pi\">:</span> <span class=\"s\">defaultcf.github.io</span>\n          <span class=\"na\">workflow_id</span><span class=\"pi\">:</span> <span class=\"s\">create-blog-link.yml</span>\n          <span class=\"na\">ref</span><span class=\"pi\">:</span> <span class=\"s\">master</span>\n        <span class=\"na\">env</span><span class=\"pi\">:</span>\n          <span class=\"na\">GITHUB_TOKEN</span><span class=\"pi\">:</span> <span class=\"s\">${{ secrets.KICK_WORKFLOW_TOKEN }}</span>\n</code></pre></div></div>\n\n<hr />\n\n<p>以上。<del>さて、この記事を push したら、workflow がまわるかな…？</del>\n<del>結果が出たら、この記事を更新する。</del></p>\n\n<p>GITHUB_TOKEN の部分で引っかかっていた。Personal access token に変更し、再度 push すると、ブログ側の action が動いて、ポートフォリオサイト側の action を発火し、ポートフォリオサイトが更新された！</p>\n\n<p>普段、業務で Bitbucket pipeline を使っているので、GitHub Actions は久々だったが、やっぱ GitHub Actions も良いな…フックが充実している。</p>","updated":"2021-10-24T00:00:00+09:00"},{"content":"<p>鈴原るるが、2021年6月30日に卒業する。\n以下、ただのオタクの自分語り。</p>\n\n<hr />\n\n<p>鈴原を知ったのは、2020年1月頃、ニコ生で深夜やっていた、 Virtual To Live の最終公演の一部再放送。鈴原はほかの VTuber と共に「林檎もぎれビーム!」を歌っていた。完璧なアイドルステップを踏む鈴原が非常に気になったのを覚えている。</p>\n\n<p>その頃には鈴原がデビューして1年近く経っており、既に大量のアーカイブ動画があったが、気になって最初の方からずっと観ていった。作業しながら観、深夜眠れない時に観…</p>\n\n<p>そこからにじさんじの他の VTuber の配信を観るようになり、やがて VTuber 全体に対して深い関心を持つようになった。\nそれでも、鈴原の配信はほぼ欠かさず観ていた。\nレトロゲーでも、イマドキのゲームでも、本当に楽しそうに遊んでいる。非常に脳筋なところがあるので、片っ端から手段を試す。そして全く諦めない。その姿が本当に好き。\n雑談配信も好き。「こんなお酒飲んでる」というのを、鈴原らしい絵で示してくれるのが個人的にめちゃめちゃ好き。深夜の語り弾きが好き。\n鈴原とその父、姉とのコラボ配信はなかなか革新的だったように思う。</p>\n\n<p>他のライバーとのコラボ、3D配信、ラジオなどなど、多方面に活躍する鈴原が好き。</p>\n\n<p>そうした鈴原が起点となって、自分もいろんなことを好きになることができた。</p>\n\n<hr />\n\n<p>そんな鈴原るるが、今日を以って VTuber を辞める。\n“推しは推せる時に推せ” という言葉の重みを、身を以って知った。</p>\n\n<p><img src=\"/blog/assets/img/suzuhara-membership.png\" alt=\"suzuhara membership\" /></p>\n\n<p>メンバーシップ、1年3ヶ月20日目。もっと早くから出会えたら良かった。</p>\n\n<iframe width=\"560\" height=\"315\" src=\"https://www.youtube-nocookie.com/embed/-d8NPJ8ShfI?rel=0\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen=\"\"></iframe>\n\n<p>最後の配信では、同時視聴者数18万人を超え、それでもほぼいつもと変わらない口調で思い出を語っていた。本当にメンタルが強い。\nこれが最後の配信とは思えないし、思いたくない。\n過去の衣装お披露目から始まり、さいねママによる未公開デザインのお披露目が行われた。\n本当にかわいらしい、まさに鈴原にぴったりの衣装ばかりだった。\nそれは今後の配信で使われたかもしれないもので、いつか3D配信での衣装になるかもしれないものだった。そんな未来が来たらどれほど良かったことか。</p>\n\n<p>引退理由を明かしてくれた。深くここでは書かないが、一ファンとして本当にやるせなく、悔しく思う。\nそれでも、鈴原は VTuber が好きで、他のライバーが好きで、ファンが好きだと言ってくれた。\n鈴原は自身の配信に自信を持てなかったというが、徐々に自分自身のことが好きになっていったと言うし、幸せだったと言う。ファンとしてもそれは本当に嬉しく、こちらも本当に幸せだった。</p>\n\n<hr />\n\n<p>そうして、7月1日0時を少し過ぎ、彼女は配信を終えた。最後まで鈴原るるたっぷりだった。\n今後、ことあるごとに鈴原を思い出すんだろうな…そして徐々に思い出す頻度は少なくなっていくんだろうけど、でも絶対に忘れない。</p>\n\n<p>本当に多くの幸せをありがとう。</p>\n\n<p>ただただ、彼女の今後の人生、健康で幸多いことを願う。</p>","updated":"2021-07-01T01:00:00+09:00","category":[""],"published":"2021-07-01T01:00:00+09:00","title":"鈴原るるの卒業にあたって、あるオタクの呟き","link":"","id":"https://default.cf/blog/2021/07/01/lulu-suzuhara","author":{"name":""},"summary":"鈴原るるが、2021年6月30日に卒業する。 以下、ただのオタクの自分語り。"},{"updated":"2021-04-24T21:52:00+09:00","content":"<p>色々あって、ユーザ名を変更する運びとなりました。</p>\n\n<h2 id=\"引っ越し\">引っ越し</h2>\n\n<p>働くために、東京に引っ越しました。\nCOVID-19 によるパンデミックの最中ですが、他に選択肢がありませんでした。</p>\n\n<p>歩いて30分ほどで秋葉原に行けるところで、なかなか良いです。</p>\n\n<h2 id=\"就職\">就職</h2>\n\n<p>ご縁があって東京のベンチャー企業で働いています。\nインフラエンジニアとしてサーバの保守や CI/CD の整備の他、バックエンドやフロントエンドのコードを修正することもあり、今までやってきたことを活かすことができています。</p>\n\n<p>知見が貯まってきたら、外部に発信していきたいなと考えています。</p>\n\n<h2 id=\"ユーザ名変更\">ユーザ名変更</h2>\n\n<p>大学時代は <code class=\"language-plaintext highlighter-rouge\">Isaac</code> や <code class=\"language-plaintext highlighter-rouge\">i544c</code> などと名乗っていました。実は高校の頃から使っていたユーザ名で、なんと9年近くも使っていました。\nただ、Twitter などで既に他のユーザが <code class=\"language-plaintext highlighter-rouge\">i544c</code> を使用しているなど、各種サービスでユーザ名を統一できておらず、モヤモヤしていました。</p>\n\n<p>そんな中、たまたま <a href=\"https://freenom.com/\">Freenom</a> で <code class=\"language-plaintext highlighter-rouge\">default.cf</code> というドメインが取れることに気付きました。ユーザ名を <code class=\"language-plaintext highlighter-rouge\">defaultcf</code> にすれば（本来の意味で）ユニークそうだし、社会人になるしで、この度改名することとしました。</p>\n\n<p>ポートフォリオも一新しました。 <a href=\"https://default.cf/\">https://default.cf/</a></p>\n\n<p>i544c.me を default.cf にリダイレクトし、 blog.i544c.me を default.cf/blog 下にリダイレクトするようにしました。同じ GitHub Pages のコンテンツなのにブログだけサブドメインで運用していて気持ち悪かったので、変更する良い機会でした。</p>\n\n<h3 id=\"freenom\">Freenom</h3>\n\n<p>…このブログを書いている今になって、 Freenom の無料ドメインの規約が気になっています。\nドメインの所有者ではなく、あくまでユーザで、 Freenom によって取り消されるかも分からない。ネット上ではドメインが使えなくなったという話がちらほら…</p>\n\n<p>金を払うべきでした…\n既に無料ドメインで取ってしまったので、1年経ったらそれ以降は有料で使おうと思います。</p>","published":"2021-04-24T21:52:00+09:00","category":[""],"title":"Hi defaultcf, bye i544c","link":"","id":"https://default.cf/blog/2021/04/24/change-user-name","author":{"name":""},"summary":"色々あって、ユーザ名を変更する運びとなりました。"},{"updated":"2020-12-31T20:52:00+09:00","content":"<p>2020年は酷かった。</p>\n\n<p>まず、COVID-19によるパンデミックが、ずっと世間に暗い影を落としていた。\n私の就活もあった。難なく進むかな、などと軽く考えていたら、散々な結果が続いた。\nそして、VTuber文化に救われた。</p>\n\n<h2 id=\"就活\">就活</h2>\n<p>色んな会社を受けたが、落ち続けた。自分のせいなのか、COVID-19のせいなのか分からず、陰鬱とした日々だった。\nそれでも社会人になることを諦められず、細々と就活を続けた結果、なんとかベンチャー企業から内定を頂戴した。</p>\n\n<p>今はこれ以上書く気になれない。</p>\n\n<h2 id=\"vtuber\">VTuber</h2>\n<p>VTuberの存在自体2018年から知っていたが、2020年3月あたりからドハマりした。\n特にホロライブ3,4期生にハマって、わための歌、あさココを毎朝見ていた。\nVTuberという存在についての思考も楽しく、よく考察記事を漁ってもいた。</p>\n\n<p>適当にまとめたページを書いたりもした…\n<a href=\"https://scrapbox.io/i544c/VTuber\">i544c/VTuber</a></p>\n\n<h2 id=\"プログラミング\">プログラミング</h2>\n<p>今までスクリプト言語を中心に書いてきたが、2020年は型の便利さを改めて学んだ。TypeScriptを書いたり、Elixirを学んだりした。\nVTuberに寄与できたらと、幾つか簡単なものを作ったりもした。</p>\n\n<h4 id=\"vgif\">vGIF</h4>\n<p><a href=\"https://github.com/i544c/vgif\">github.com/i544c/vgif</a></p>\n\n<p>VTuberのAnimated GIFを共有できる、ウェブアプリケーション。\nRails製。デプロイはHerokuにして、画像のホストはS3にした。</p>\n\n<h4 id=\"youtube-sticky-live-chat\">YouTube Sticky Live Chat</h4>\n<p><a href=\"https://greasyfork.org/ja/scripts/402617-youtube-sticky-live-chat\">greasyfork.org/ja/scripts/402617-youtube-sticky-live-chat</a></p>\n\n<p>YouTubeのライブチャットで、放送主かモデレータのコメントを一番上に固定して表示する、UserScript。\n（その後、YouTubeは公式に投稿主のコメントをトップに固定できる機能をリリースした）</p>\n\n<h4 id=\"nico-excluder\">Nico Excluder</h4>\n<p><a href=\"https://greasyfork.org/ja/scripts/405548-nico-excluder\">greasyfork.org/ja/scripts/405548-nico-excluder</a></p>\n\n<p>ニコニコ動画のランキングページから、指定したユーザの投稿した動画を非表示にする、UserScript。\n珍しくちゃんとクラス使って綺麗に書いたなぁ…</p>\n\n<h4 id=\"大神ミオ通知bot\">大神ミオ通知bot</h4>\n<p><a href=\"https://twitter.com/mio_bot\">twitter.com/mio_bot</a></p>\n\n<p>年の瀬に大神ミオちゃんのTwitterアカウントが凍結してしまった。大神ミオちゃんはYouTubeのライブで、公開を2年ほど先に指定した枠を立てて、そこのライブチャットでファンたちと対話している。\nしかし、ライブチャットでは過去のコメントが流れてしまって、大神ミオちゃんの発言が遡れない。</p>\n\n<p>なので、ライブチャットを監視して、大神ミオちゃんの発言が来たらTwitterで呟くbotを作った。\n今度、技術記事を書こうかなと思っている。</p>\n\n<h4 id=\"f-corps\">f○○○ corps</h4>\n<p><a href=\"https://gist.github.com/i544c/1ae779e494cdc0cf5d2f95a1b01be278\">i544c/fuck_corps.user.js</a>\n私を落とした企業の名称を「クソ企業」に置換する、ユーザスクリプト。これで大体のウェブページで、不快な名称を目にすることがなくなる（SPAなど動的にウェブページを書き換えているサイトでは機能しない）。</p>\n\n<h2 id=\"おわり\">おわり</h2>\n<p>2020年は酷かった。でも、VTuberに救われた。\n来年はさっさと卒業し、東京に引っ越して、ソフトウェアエンジニアとして生きる予定。</p>","category":[""],"published":"2020-12-31T20:52:00+09:00","title":"さようなら、2020年","link":"","id":"https://default.cf/blog/2020/12/31/goodbye-2020","summary":"2020年は酷かった。","author":{"name":""}},{"published":"2020-08-31T16:52:00+09:00","category":[""],"link":"","title":"Hello Gemini","updated":"2020-08-31T16:52:00+09:00","content":"<p>Geminiというものに出会った。\n双子座という意味のそれではなく、昨今の複雑化したウェブを憂いて作り出された、シンプルなインターネットプロトコルを指す。</p>\n\n<p>https://gemini.circumlunar.space/</p>\n\n<p>Geminiはウェブと似ているようで違う。TLSによる通信しか許されず、セキュアだ。</p>\n\n<p>またGeminiには、クライアントで装飾するためのCSSも無く、またクライアントでインタラクティブなことができるJavaScriptも無い。\nやり取りするのはただのテキストファイルで、それはMarkdownに似たシンプルな書式だ。</p>\n\n<p>インラインでの画像埋め込みすら出来ず、本当に文字だけを伝えられる。\n古い古いウェブを体感させてくれるようで、なんだかセンチメンタルな気分になる。（その時代には生まれていないのだが）</p>\n\n<p>試しに自分もGeminiでの配信を始めてみた。\nhttps://gemini.circumlunar.space/clients.html にあるクライアントを使うことで閲覧できる。</p>\n\n<p>gemini://gemini.i544c.me</p>\n\n<p>とりあえず、感情が昂ぶった時にそこで吐き出している。\n今までこのブログに書いてきたヲタクな話を、これからはこのGeminiで配信していこうと思う。</p>","summary":"Geminiというものに出会った。 双子座という意味のそれではなく、昨今の複雑化したウェブを憂いて作り出された、シンプルなインターネットプロトコルを指す。","author":{"name":""},"id":"https://default.cf/blog/2020/08/31/gemini"},{"title":"Welcome to Jekyll!","category":["",""],"published":"2020-08-11T23:52:48+09:00","link":"","content":"<p>今までWordPressで運用してきたこの blog.i544c.me を、Jekyllでの生成に移行しました:clap:</p>\n\n<h2 id=\"理由\">理由</h2>\n<p>移行した理由は…</p>\n<ul>\n  <li>リッチなエディタに馴染めなかった\n    <ul>\n      <li>やっぱりMarkdownで書きたい</li>\n    </ul>\n  </li>\n  <li>VPSでの運用コスト\n    <ul>\n      <li>無料のサービスを利用することで金銭的コストから開放される</li>\n    </ul>\n  </li>\n  <li>セキュリティ上のリスク\n    <ul>\n      <li>静的にページ生成すりゃ良いじゃん</li>\n    </ul>\n  </li>\n</ul>\n\n<p>Jekyllを選んだのは、GitHubでサクッと公開できるから。</p>\n\n<h2 id=\"手段\">手段</h2>\n<p>[2021-04-25 追記]\n多分知らなかっただけなのだけど、普通に WordPress などからインポートする手段が Jekyll 公式で用意されている。自前でやらず、まずはこのツールを試すべき。</p>\n\n<p><a href=\"https://import.jekyllrb.com/docs/wordpress/\">https://import.jekyllrb.com/docs/wordpress/</a></p>\n\n<p>以降は自前で頑張った話👇</p>\n\n<hr />\n\n<p>WordPressに標準搭載されているエクスポートツールを使って、「すべてのコンテンツ」をXMLファイルとして得る。</p>\n\n<p>次にこのXMLファイルからMarkdownファイルに変換する。</p>\n\n<p><a href=\"https://github.com/lonekorean/wordpress-export-to-markdown/\">github.com/lonekorean/wordpress-export-to-markdown</a></p>\n\n<p>このツールを使うことで、Markdownファイルに変換できる他、更に記事に埋め込んだ画像なんかも取ってきてリンクし直してくれる（！）。ただ画像のリンクが理想の場所にならなかったので、自分でちょっとコードを変更して実行した。</p>\n\n<p>あとは、Jekyllのプロジェクトを作成して、Markdownファイル達を設置して、完了。</p>\n\n<p>…とはならなかった。一部ページのURLが、WordPressの頃のものと違うものになっていた。</p>\n<ul>\n  <li>URLにマルチバイト文字が含まれる場合</li>\n  <li>記事作成日と公開日が異なる場合</li>\n</ul>\n\n<p>上記の条件に当てはまる時に、リンクが元のと異なることが分かった。新たなURLでやっていくのも良いが、なるべくパスはそのままにしておきたい。リンクとかされていたら困ることになるし（まぁリンクされてないと思うが）。</p>\n\n<p>問題の記事は10も無かったので、JekyllでのURLとWordPressでのURLをチェックする簡単なPythonのコードスニペットを書いて、手動で修正した。</p>","updated":"2020-08-11T23:52:48+09:00","author":{"name":""},"summary":"今までWordPressで運用してきたこの blog.i544c.me を、Jekyllでの生成に移行しました:clap:","id":"https://default.cf/blog/2020/08/11/welcome-to-jekyll"},{"content":"<p>2年越しにやっと就活をしているが、10社くらい受けて心折れそうになっている。自分のやりたいことって何だっけ…</p>\n\n<p><a href=\"https://scrapbox.io/i544c/就活\">https://scrapbox.io/i544c/就活</a></p>\n\n<p>最近、note.comを使い始めた。WordPressで公開しているこのブログの場合、RSSで更新をチェックしている奇特な人か、Google検索でヒットするかでしか見てくれない。その点、note.comではサービス内でのフォロー機能や検索、ハッシュタグからも来てくれる。</p>\n\n<p>WISYWIGはシンプルで、語るぞ！って時に向いているように思うので、今後ヲタクな話はnote.comに書く予定。 <a href=\"https://note.com/i544c\">https://note.com/i544c</a></p>\n\n<p>早速、個人で開発したウェブサービスのリリースノートを書いてみた。</p>\n\n<p><a href=\"https://note.com/i544c/n/n7153c99645b2\">https://note.com/i544c/n/n7153c99645b2</a></p>\n\n<h2 id=\"tomoyo-linux\">TOMOYO Linux</h2>\n\n<p>ずっとSELinuxを導入しようと奮闘してきたが、幾つかビルドに失敗するものがあって、辛かった。ビルドに必要なライブラリ、ツールが分からんし、ちゃんとバージョンを指定してほしい。</p>\n\n<p><strong>[2020年6月11日更新]</strong> 試行錯誤した末、必要なパッケージが分かってビルドに成功した。 <a href=\"https://scrapbox.io/i544c/SELinux\">https://scrapbox.io/i544c/SELinux</a></p>\n\n<p>そんな中、TOMOYO Linuxを知ったので試すことにした。</p>\n\n<p><a href=\"https://scrapbox.io/i544c/TOMOYO_Linux\">https://scrapbox.io/i544c/TOMOYO_Linux</a></p>\n\n<p>（調べて分かったことなどは <a href=\"https://scrapbox.io/i544c\">https://scrapbox.io/i544c</a> に書くようにしている）</p>\n\n<p>VirtualBoxで環境を作って、色々試してみた。ポリシーをTUIで操作できるのが気持ちいい。</p>\n\n<p>試しにEmacsのプロセスをポリシー無しでenforce状態にしてみる。</p>\n\n<p><img src=\"/assets/img/Screenshot_2020-05-16_23-14-16.png\" alt=\"\" /></p>\n\n<p>※Emacsに恨みはありません</p>\n\n<p>これは単純な例だが、例えば特定のディレクトリ内での編集しか許可しないとか、ネットワーク通信を遮断するということもできる。</p>\n\n<p>特に有益な使い方としては、Apacheの設定ミスを防ぐために、Apacheのプロセスが/var/www/html以外にアクセスすることを拒否するというのがある。（起動に必要なファイルは許可する）。つまり、ディレクトリトラバーサルを防げる。また、Apacheのプロセスから指定したプロセス以外を起動させないことができるので、何かCGIなどで動作しているプログラムに脆弱性があったとしても、コマンドインジェクションを起こさない。</p>\n\n<p>もっとドキュメントを読み進めて、日常的に使うようになりたい。</p>","updated":"2020-05-16T00:00:00+09:00","title":"近況報告と、TOMOYO Linuxを導入しようとしている話","published":"2020-05-16T00:00:00+09:00","link":"","id":"https://default.cf/blog/2020/05/16/try-tomoyo-linux","author":{"name":""},"summary":"2年越しにやっと就活をしているが、10社くらい受けて心折れそうになっている。自分のやりたいことって何だっけ…"},{"updated":"2020-01-31T00:00:00+09:00","content":"<p>はい。</p>\n\n<p>PostgreSQL 9.3から、COPYコマンドにある機能が追加されているようです。これは、コマンドの実行結果をレコードに挿入したり、レコードの結果をコマンドの標準入力として実行したりできるものです。詳しくは公式サイトの9.2と9.3の説明を見比べてみてください。</p>\n\n<p>9.2のCOPY <a href=\"https://www.postgresql.org/docs/9.2/sql-copy.html\">https://www.postgresql.org/docs/9.2/sql-copy.html</a><br />\n9.3のCOPY <a href=\"https://www.postgresql.org/docs/9.3/sql-copy.html\">https://www.postgresql.org/docs/9.3/sql-copy.html</a></p>\n\n<p>聡明な読者の皆さんはお気づきかと思いますが、<strong>外部からPostgreSQLにログインさえできれば</strong>、これを使って任意のコマンドが実行できるのです(ただしコマンドはPostgreSQL実行ユーザで実行されるので、そのユーザの権限で実行できる範囲に留まります)。</p>\n\n<p>これは仕様なので、脆弱性と言えるのかどうか…</p>\n\n<p><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2019-9193\">https://nvd.nist.gov/vuln/detail/CVE-2019-9193</a></p>\n\n<p>https://medium.com/greenwolf-security/authenticated-arbitrary-command-execution-on-postgresql-9-3-latest-cd18945914d5</p>\n\n<p>詳しく説明しているブログ</p>\n\n<p>とにかく、</p>\n\n<p><strong>PostgreSQLのポートを閉じていたり、PostgreSQLでユーザのログインできるIPアドレスをlocalhostに絞っていたりすれば、防げる話</strong>です。</p>\n\n<h2 id=\"マジで不必要なポートは閉じましょう\">マジで不必要なポートは閉じましょう。</h2>\n\n<p>必要最低限のポートだけを開けましょう。</p>\n\n<p>次の投稿では、セキュリティを意識したサーバの建て方を書きます、きっと。</p>","link":"","published":"2020-01-31T00:00:00+09:00","title":"PostgreSQL 9.3以降でセキュリティを疎かにすると、任意のコード実行できちゃうので気をつけよう","id":"https://default.cf/blog/2020/01/31/postgresql-9-3-copy-command","author":{"name":""},"summary":"はい。"}]}}