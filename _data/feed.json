{"feed":{"title":"default.cf/blog","entry":[{"author":{"name":""},"title":"Jekyll で 他の Jekyll から情報を取得する","published":"2021-10-24T00:00:00+09:00","updated":"2021-10-24T00:00:00+09:00","content":"<p>需要が無いかもしれない技術メモ。</p>\n\n<p>Jekyll で作っている2つのサイトがある。</p>\n<ul>\n  <li><a href=\"https://default.cf/\">default.cf</a> ←ポートフォリオサイト</li>\n  <li><a href=\"https://default.cf/blog/\">default.cf/blog</a> ←ブログ</li>\n</ul>\n\n<p>同じドメインでホストしているが、これらは別々のリポジトリで GitHub Pages を使ってビルドされている。そのため、ドメインを跨いで情報を取得することは基本的にはできない。</p>\n\n<p>今回は、ポートフォリオサイト上にブログのリンクを表示したい。\n色々考えた末、jekyll-feed で生成される feed.xml を、何らかの方法でポートフォリオの <code class=\"language-plaintext highlighter-rouge\">_data/feed.json</code> に置くことができれば良いとなった。</p>\n\n<p>技術的には次の挑戦が必要だった。</p>\n<ul>\n  <li>XML ファイルを JSON ファイルに変換する</li>\n  <li>ポートフォリオサイトの GitHub Actions で XML ファイルの取得、JSON ファイルへの変換、コミット</li>\n  <li>ブログを書いて master にプッシュしたら、ポートフォリオサイトの action が発火され更新される</li>\n</ul>\n\n<p>順に説明する。</p>\n\n<h2 id=\"xml-ファイルを-json-ファイルに変換する\">XML ファイルを JSON ファイルに変換する</h2>\n\n<p>xml2json を使って変換することにした。\n詳しくは Scrapbox に書いた。</p>\n\n<ul>\n  <li><a href=\"https://scrapbox.io/defaultcf/xml2json\">scrapbox.io/defaultcf/xml2json</a></li>\n  <li><a href=\"https://scrapbox.io/defaultcf/XML_Schema\">scrapbox.io/defaultcf/XML_Schema</a></li>\n</ul>\n\n<p>XML Schema を頑張って書いて、変換できることを確認した。\nただ一箇所、XML 側を修正しないとどうしても変換できないところがあって、そこは処理前に sed で置換することにした。</p>\n<div class=\"language-bash highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nb\">sed</span> <span class=\"nt\">-e</span> <span class=\"s1\">'s/xmlns:atom=/xmlns:atom=/'</span>\n</code></pre></div></div>\n\n<h2 id=\"ポートフォリオサイトの-github-actions-で-xml-ファイルの取得json-ファイルへの変換コミット\">ポートフォリオサイトの GitHub Actions で XML ファイルの取得、JSON ファイルへの変換、コミット</h2>\n<p>試行錯誤して最終的にこうなった。</p>\n\n<p><code class=\"language-plaintext highlighter-rouge\">.github/workflows/create-blog-links.yml</code></p>\n<div class=\"language-yaml highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"na\">name</span><span class=\"pi\">:</span> <span class=\"s\">Create blog links</span>\n<span class=\"na\">on</span><span class=\"pi\">:</span> <span class=\"s\">workflow_dispatch</span>\n<span class=\"na\">jobs</span><span class=\"pi\">:</span>\n  <span class=\"na\">fetch-and-create</span><span class=\"pi\">:</span>\n    <span class=\"na\">runs-on</span><span class=\"pi\">:</span> <span class=\"s\">ubuntu-latest</span>\n    <span class=\"na\">steps</span><span class=\"pi\">:</span>\n      <span class=\"pi\">-</span> <span class=\"na\">run</span><span class=\"pi\">:</span> <span class=\"s\">sudo apt update &amp;&amp; sudo apt install -y libxml-compile-perl libjson-xs-perl</span>\n      <span class=\"pi\">-</span> <span class=\"na\">uses</span><span class=\"pi\">:</span> <span class=\"s\">actions/checkout@v2</span>\n      <span class=\"pi\">-</span> <span class=\"na\">run</span><span class=\"pi\">:</span> <span class=\"pi\">|</span>\n          <span class=\"s\">curl https://default.cf/blog/feed.xml |\\</span>\n          <span class=\"s\">sed -e 's/xmlns:atom=/xmlns:atom=/' |\\</span>\n          <span class=\"s\">xml2json -x - -s feed.xsd &gt; _data/feed.json</span>\n      <span class=\"pi\">-</span> <span class=\"na\">uses</span><span class=\"pi\">:</span> <span class=\"s\">EndBug/add-and-commit@v7</span>\n        <span class=\"na\">with</span><span class=\"pi\">:</span>\n          <span class=\"na\">message</span><span class=\"pi\">:</span> <span class=\"s1\">'</span><span class=\"s\">Update</span><span class=\"nv\"> </span><span class=\"s\">feed.json'</span>\n          <span class=\"na\">committer_name</span><span class=\"pi\">:</span> <span class=\"s\">GitHub Actions</span>\n          <span class=\"na\">committer_email</span><span class=\"pi\">:</span> <span class=\"s\">41898282+github-actions[bot]@users.noreply.github.com</span>\n</code></pre></div></div>\n\n<p>これだけで済むのだから、GitHub Marketplace 様様だ。</p>\n\n<p>手動で workflow を実行して、feed 取得・JSON に変換・コミットが為されることを確認する。</p>\n\n<h2 id=\"ブログを書いて-master-にプッシュしたらポートフォリオサイトの-action-が発火され更新される\">ブログを書いて master にプッシュしたら、ポートフォリオサイトの action が発火され更新される</h2>\n<p>GitHub REST API を叩いて、他の workflow を発火することができるらしい。\nブログ側の action をこのように書いた。これでいけるはず…</p>\n\n<p><code class=\"language-plaintext highlighter-rouge\">.github/workflows/kick-portfolio.yml</code></p>\n<div class=\"language-yaml highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"na\">name</span><span class=\"pi\">:</span> <span class=\"s\">Kick portfolio</span>\n<span class=\"na\">on</span><span class=\"pi\">:</span>\n  <span class=\"na\">push</span><span class=\"pi\">:</span>\n    <span class=\"na\">branches</span><span class=\"pi\">:</span>\n      <span class=\"pi\">-</span> <span class=\"s\">master</span>\n<span class=\"na\">jobs</span><span class=\"pi\">:</span>\n  <span class=\"na\">post-api</span><span class=\"pi\">:</span>\n    <span class=\"na\">runs-on</span><span class=\"pi\">:</span> <span class=\"s\">ubuntu-latest</span>\n    <span class=\"na\">steps</span><span class=\"pi\">:</span>\n      <span class=\"pi\">-</span> <span class=\"na\">uses</span><span class=\"pi\">:</span> <span class=\"s\">octokit/request-action@v2.x</span>\n        <span class=\"na\">with</span><span class=\"pi\">:</span>\n          <span class=\"na\">route</span><span class=\"pi\">:</span> <span class=\"s\">POST /repos/{owner}/{repo}/actions/workflows/{workflow_id}/dispatches</span>\n          <span class=\"na\">owner</span><span class=\"pi\">:</span> <span class=\"s\">defaultcf</span>\n          <span class=\"na\">repo</span><span class=\"pi\">:</span> <span class=\"s\">defaultcf.github.io</span>\n          <span class=\"na\">workflow_id</span><span class=\"pi\">:</span> <span class=\"s\">create-blog-link.yml</span>\n        <span class=\"na\">env</span><span class=\"pi\">:</span>\n          <span class=\"na\">GITHUB_TOKEN</span><span class=\"pi\">:</span> <span class=\"s\">${{ secrets.GITHUB_TOKEN }}</span>\n</code></pre></div></div>\n\n<hr />\n\n<p>以上。さて、この記事を push したら、workflow がまわるかな…？\n結果が出たら、この記事を更新する。</p>","id":"https://default.cf/blog/2021/10/24/jekyll-fetch-other-jekyll","category":["",""],"link":"","summary":"需要が無いかもしれない技術メモ。"},{"summary":"鈴原るるが、2021年6月30日に卒業する。 以下、ただのオタクの自分語り。","link":"","category":[""],"content":"<p>鈴原るるが、2021年6月30日に卒業する。\n以下、ただのオタクの自分語り。</p>\n\n<hr />\n\n<p>鈴原を知ったのは、2020年1月頃、ニコ生で深夜やっていた、 Virtual To Live の最終公演の一部再放送。鈴原はほかの VTuber と共に「林檎もぎれビーム!」を歌っていた。完璧なアイドルステップを踏む鈴原が非常に気になったのを覚えている。</p>\n\n<p>その頃には鈴原がデビューして1年近く経っており、既に大量のアーカイブ動画があったが、気になって最初の方からずっと観ていった。作業しながら観、深夜眠れない時に観…</p>\n\n<p>そこからにじさんじの他の VTuber の配信を観るようになり、やがて VTuber 全体に対して深い関心を持つようになった。\nそれでも、鈴原の配信はほぼ欠かさず観ていた。\nレトロゲーでも、イマドキのゲームでも、本当に楽しそうに遊んでいる。非常に脳筋なところがあるので、片っ端から手段を試す。そして全く諦めない。その姿が本当に好き。\n雑談配信も好き。「こんなお酒飲んでる」というのを、鈴原らしい絵で示してくれるのが個人的にめちゃめちゃ好き。深夜の語り弾きが好き。\n鈴原とその父、姉とのコラボ配信はなかなか革新的だったように思う。</p>\n\n<p>他のライバーとのコラボ、3D配信、ラジオなどなど、多方面に活躍する鈴原が好き。</p>\n\n<p>そうした鈴原が起点となって、自分もいろんなことを好きになることができた。</p>\n\n<hr />\n\n<p>そんな鈴原るるが、今日を以って VTuber を辞める。\n“推しは推せる時に推せ” という言葉の重みを、身を以って知った。</p>\n\n<p><img src=\"/blog/assets/img/suzuhara-membership.png\" alt=\"suzuhara membership\" /></p>\n\n<p>メンバーシップ、1年3ヶ月20日目。もっと早くから出会えたら良かった。</p>\n\n<iframe width=\"560\" height=\"315\" src=\"https://www.youtube-nocookie.com/embed/-d8NPJ8ShfI?rel=0\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen=\"\"></iframe>\n\n<p>最後の配信では、同時視聴者数18万人を超え、それでもほぼいつもと変わらない口調で思い出を語っていた。本当にメンタルが強い。\nこれが最後の配信とは思えないし、思いたくない。\n過去の衣装お披露目から始まり、さいねママによる未公開デザインのお披露目が行われた。\n本当にかわいらしい、まさに鈴原にぴったりの衣装ばかりだった。\nそれは今後の配信で使われたかもしれないもので、いつか3D配信での衣装になるかもしれないものだった。そんな未来が来たらどれほど良かったことか。</p>\n\n<p>引退理由を明かしてくれた。深くここでは書かないが、一ファンとして本当にやるせなく、悔しく思う。\nそれでも、鈴原は VTuber が好きで、他のライバーが好きで、ファンが好きだと言ってくれた。\n鈴原は自身の配信に自信を持てなかったというが、徐々に自分自身のことが好きになっていったと言うし、幸せだったと言う。ファンとしてもそれは本当に嬉しく、こちらも本当に幸せだった。</p>\n\n<hr />\n\n<p>そうして、7月1日0時を少し過ぎ、彼女は配信を終えた。最後まで鈴原るるたっぷりだった。\n今後、ことあるごとに鈴原を思い出すんだろうな…そして徐々に思い出す頻度は少なくなっていくんだろうけど、でも絶対に忘れない。</p>\n\n<p>本当に多くの幸せをありがとう。</p>\n\n<p>ただただ、彼女の今後の人生、健康で幸多いことを願う。</p>","id":"https://default.cf/blog/2021/07/01/lulu-suzuhara","updated":"2021-07-01T01:00:00+09:00","published":"2021-07-01T01:00:00+09:00","author":{"name":""},"title":"鈴原るるの卒業にあたって、あるオタクの呟き"},{"id":"https://default.cf/blog/2021/04/24/change-user-name","content":"<p>色々あって、ユーザ名を変更する運びとなりました。</p>\n\n<h2 id=\"引っ越し\">引っ越し</h2>\n\n<p>働くために、東京に引っ越しました。\nCOVID-19 によるパンデミックの最中ですが、他に選択肢がありませんでした。</p>\n\n<p>歩いて30分ほどで秋葉原に行けるところで、なかなか良いです。</p>\n\n<h2 id=\"就職\">就職</h2>\n\n<p>ご縁があって東京のベンチャー企業で働いています。\nインフラエンジニアとしてサーバの保守や CI/CD の整備の他、バックエンドやフロントエンドのコードを修正することもあり、今までやってきたことを活かすことができています。</p>\n\n<p>知見が貯まってきたら、外部に発信していきたいなと考えています。</p>\n\n<h2 id=\"ユーザ名変更\">ユーザ名変更</h2>\n\n<p>大学時代は <code class=\"language-plaintext highlighter-rouge\">Isaac</code> や <code class=\"language-plaintext highlighter-rouge\">i544c</code> などと名乗っていました。実は高校の頃から使っていたユーザ名で、なんと9年近くも使っていました。\nただ、Twitter などで既に他のユーザが <code class=\"language-plaintext highlighter-rouge\">i544c</code> を使用しているなど、各種サービスでユーザ名を統一できておらず、モヤモヤしていました。</p>\n\n<p>そんな中、たまたま <a href=\"https://freenom.com/\">Freenom</a> で <code class=\"language-plaintext highlighter-rouge\">default.cf</code> というドメインが取れることに気付きました。ユーザ名を <code class=\"language-plaintext highlighter-rouge\">defaultcf</code> にすれば（本来の意味で）ユニークそうだし、社会人になるしで、この度改名することとしました。</p>\n\n<p>ポートフォリオも一新しました。 <a href=\"https://default.cf/\">https://default.cf/</a></p>\n\n<p>i544c.me を default.cf にリダイレクトし、 blog.i544c.me を default.cf/blog 下にリダイレクトするようにしました。同じ GitHub Pages のコンテンツなのにブログだけサブドメインで運用していて気持ち悪かったので、変更する良い機会でした。</p>\n\n<h3 id=\"freenom\">Freenom</h3>\n\n<p>…このブログを書いている今になって、 Freenom の無料ドメインの規約が気になっています。\nドメインの所有者ではなく、あくまでユーザで、 Freenom によって取り消されるかも分からない。ネット上ではドメインが使えなくなったという話がちらほら…</p>\n\n<p>金を払うべきでした…\n既に無料ドメインで取ってしまったので、1年経ったらそれ以降は有料で使おうと思います。</p>","category":[""],"link":"","summary":"色々あって、ユーザ名を変更する運びとなりました。","author":{"name":""},"title":"Hi defaultcf, bye i544c","published":"2021-04-24T21:52:00+09:00","updated":"2021-04-24T21:52:00+09:00"},{"link":"","category":[""],"id":"https://default.cf/blog/2020/12/31/goodbye-2020","content":"<p>2020年は酷かった。</p>\n\n<p>まず、COVID-19によるパンデミックが、ずっと世間に暗い影を落としていた。\n私の就活もあった。難なく進むかな、などと軽く考えていたら、散々な結果が続いた。\nそして、VTuber文化に救われた。</p>\n\n<h2 id=\"就活\">就活</h2>\n<p>色んな会社を受けたが、落ち続けた。自分のせいなのか、COVID-19のせいなのか分からず、陰鬱とした日々だった。\nそれでも社会人になることを諦められず、細々と就活を続けた結果、なんとかベンチャー企業から内定を頂戴した。</p>\n\n<p>今はこれ以上書く気になれない。</p>\n\n<h2 id=\"vtuber\">VTuber</h2>\n<p>VTuberの存在自体2018年から知っていたが、2020年3月あたりからドハマりした。\n特にホロライブ3,4期生にハマって、わための歌、あさココを毎朝見ていた。\nVTuberという存在についての思考も楽しく、よく考察記事を漁ってもいた。</p>\n\n<p>適当にまとめたページを書いたりもした…\n<a href=\"https://scrapbox.io/i544c/VTuber\">i544c/VTuber</a></p>\n\n<h2 id=\"プログラミング\">プログラミング</h2>\n<p>今までスクリプト言語を中心に書いてきたが、2020年は型の便利さを改めて学んだ。TypeScriptを書いたり、Elixirを学んだりした。\nVTuberに寄与できたらと、幾つか簡単なものを作ったりもした。</p>\n\n<h4 id=\"vgif\">vGIF</h4>\n<p><a href=\"https://github.com/i544c/vgif\">github.com/i544c/vgif</a></p>\n\n<p>VTuberのAnimated GIFを共有できる、ウェブアプリケーション。\nRails製。デプロイはHerokuにして、画像のホストはS3にした。</p>\n\n<h4 id=\"youtube-sticky-live-chat\">YouTube Sticky Live Chat</h4>\n<p><a href=\"https://greasyfork.org/ja/scripts/402617-youtube-sticky-live-chat\">greasyfork.org/ja/scripts/402617-youtube-sticky-live-chat</a></p>\n\n<p>YouTubeのライブチャットで、放送主かモデレータのコメントを一番上に固定して表示する、UserScript。\n（その後、YouTubeは公式に投稿主のコメントをトップに固定できる機能をリリースした）</p>\n\n<h4 id=\"nico-excluder\">Nico Excluder</h4>\n<p><a href=\"https://greasyfork.org/ja/scripts/405548-nico-excluder\">greasyfork.org/ja/scripts/405548-nico-excluder</a></p>\n\n<p>ニコニコ動画のランキングページから、指定したユーザの投稿した動画を非表示にする、UserScript。\n珍しくちゃんとクラス使って綺麗に書いたなぁ…</p>\n\n<h4 id=\"大神ミオ通知bot\">大神ミオ通知bot</h4>\n<p><a href=\"https://twitter.com/mio_bot\">twitter.com/mio_bot</a></p>\n\n<p>年の瀬に大神ミオちゃんのTwitterアカウントが凍結してしまった。大神ミオちゃんはYouTubeのライブで、公開を2年ほど先に指定した枠を立てて、そこのライブチャットでファンたちと対話している。\nしかし、ライブチャットでは過去のコメントが流れてしまって、大神ミオちゃんの発言が遡れない。</p>\n\n<p>なので、ライブチャットを監視して、大神ミオちゃんの発言が来たらTwitterで呟くbotを作った。\n今度、技術記事を書こうかなと思っている。</p>\n\n<h4 id=\"f-corps\">f○○○ corps</h4>\n<p><a href=\"https://gist.github.com/i544c/1ae779e494cdc0cf5d2f95a1b01be278\">i544c/fuck_corps.user.js</a>\n私を落とした企業の名称を「クソ企業」に置換する、ユーザスクリプト。これで大体のウェブページで、不快な名称を目にすることがなくなる（SPAなど動的にウェブページを書き換えているサイトでは機能しない）。</p>\n\n<h2 id=\"おわり\">おわり</h2>\n<p>2020年は酷かった。でも、VTuberに救われた。\n来年はさっさと卒業し、東京に引っ越して、ソフトウェアエンジニアとして生きる予定。</p>","summary":"2020年は酷かった。","author":{"name":""},"title":"さようなら、2020年","updated":"2020-12-31T20:52:00+09:00","published":"2020-12-31T20:52:00+09:00"},{"title":"Hello Gemini","author":{"name":""},"published":"2020-08-31T16:52:00+09:00","updated":"2020-08-31T16:52:00+09:00","category":[""],"link":"","id":"https://default.cf/blog/2020/08/31/gemini","content":"<p>Geminiというものに出会った。\n双子座という意味のそれではなく、昨今の複雑化したウェブを憂いて作り出された、シンプルなインターネットプロトコルを指す。</p>\n\n<p>https://gemini.circumlunar.space/</p>\n\n<p>Geminiはウェブと似ているようで違う。TLSによる通信しか許されず、セキュアだ。</p>\n\n<p>またGeminiには、クライアントで装飾するためのCSSも無く、またクライアントでインタラクティブなことができるJavaScriptも無い。\nやり取りするのはただのテキストファイルで、それはMarkdownに似たシンプルな書式だ。</p>\n\n<p>インラインでの画像埋め込みすら出来ず、本当に文字だけを伝えられる。\n古い古いウェブを体感させてくれるようで、なんだかセンチメンタルな気分になる。（その時代には生まれていないのだが）</p>\n\n<p>試しに自分もGeminiでの配信を始めてみた。\nhttps://gemini.circumlunar.space/clients.html にあるクライアントを使うことで閲覧できる。</p>\n\n<p>gemini://gemini.i544c.me</p>\n\n<p>とりあえず、感情が昂ぶった時にそこで吐き出している。\n今までこのブログに書いてきたヲタクな話を、これからはこのGeminiで配信していこうと思う。</p>","summary":"Geminiというものに出会った。 双子座という意味のそれではなく、昨今の複雑化したウェブを憂いて作り出された、シンプルなインターネットプロトコルを指す。"},{"summary":"今までWordPressで運用してきたこの blog.i544c.me を、Jekyllでの生成に移行しました:clap:","id":"https://default.cf/blog/2020/08/11/welcome-to-jekyll","content":"<p>今までWordPressで運用してきたこの blog.i544c.me を、Jekyllでの生成に移行しました:clap:</p>\n\n<h2 id=\"理由\">理由</h2>\n<p>移行した理由は…</p>\n<ul>\n  <li>リッチなエディタに馴染めなかった\n    <ul>\n      <li>やっぱりMarkdownで書きたい</li>\n    </ul>\n  </li>\n  <li>VPSでの運用コスト\n    <ul>\n      <li>無料のサービスを利用することで金銭的コストから開放される</li>\n    </ul>\n  </li>\n  <li>セキュリティ上のリスク\n    <ul>\n      <li>静的にページ生成すりゃ良いじゃん</li>\n    </ul>\n  </li>\n</ul>\n\n<p>Jekyllを選んだのは、GitHubでサクッと公開できるから。</p>\n\n<h2 id=\"手段\">手段</h2>\n<p>[2021-04-25 追記]\n多分知らなかっただけなのだけど、普通に WordPress などからインポートする手段が Jekyll 公式で用意されている。自前でやらず、まずはこのツールを試すべき。</p>\n\n<p><a href=\"https://import.jekyllrb.com/docs/wordpress/\">https://import.jekyllrb.com/docs/wordpress/</a></p>\n\n<p>以降は自前で頑張った話👇</p>\n\n<hr />\n\n<p>WordPressに標準搭載されているエクスポートツールを使って、「すべてのコンテンツ」をXMLファイルとして得る。</p>\n\n<p>次にこのXMLファイルからMarkdownファイルに変換する。</p>\n\n<p><a href=\"https://github.com/lonekorean/wordpress-export-to-markdown/\">github.com/lonekorean/wordpress-export-to-markdown</a></p>\n\n<p>このツールを使うことで、Markdownファイルに変換できる他、更に記事に埋め込んだ画像なんかも取ってきてリンクし直してくれる（！）。ただ画像のリンクが理想の場所にならなかったので、自分でちょっとコードを変更して実行した。</p>\n\n<p>あとは、Jekyllのプロジェクトを作成して、Markdownファイル達を設置して、完了。</p>\n\n<p>…とはならなかった。一部ページのURLが、WordPressの頃のものと違うものになっていた。</p>\n<ul>\n  <li>URLにマルチバイト文字が含まれる場合</li>\n  <li>記事作成日と公開日が異なる場合</li>\n</ul>\n\n<p>上記の条件に当てはまる時に、リンクが元のと異なることが分かった。新たなURLでやっていくのも良いが、なるべくパスはそのままにしておきたい。リンクとかされていたら困ることになるし（まぁリンクされてないと思うが）。</p>\n\n<p>問題の記事は10も無かったので、JekyllでのURLとWordPressでのURLをチェックする簡単なPythonのコードスニペットを書いて、手動で修正した。</p>","category":["",""],"link":"","published":"2020-08-11T23:52:48+09:00","updated":"2020-08-11T23:52:48+09:00","title":"Welcome to Jekyll!","author":{"name":""}},{"summary":"2年越しにやっと就活をしているが、10社くらい受けて心折れそうになっている。自分のやりたいことって何だっけ…","content":"<p>2年越しにやっと就活をしているが、10社くらい受けて心折れそうになっている。自分のやりたいことって何だっけ…</p>\n\n<p><a href=\"https://scrapbox.io/i544c/就活\">https://scrapbox.io/i544c/就活</a></p>\n\n<p>最近、note.comを使い始めた。WordPressで公開しているこのブログの場合、RSSで更新をチェックしている奇特な人か、Google検索でヒットするかでしか見てくれない。その点、note.comではサービス内でのフォロー機能や検索、ハッシュタグからも来てくれる。</p>\n\n<p>WISYWIGはシンプルで、語るぞ！って時に向いているように思うので、今後ヲタクな話はnote.comに書く予定。 <a href=\"https://note.com/i544c\">https://note.com/i544c</a></p>\n\n<p>早速、個人で開発したウェブサービスのリリースノートを書いてみた。</p>\n\n<p><a href=\"https://note.com/i544c/n/n7153c99645b2\">https://note.com/i544c/n/n7153c99645b2</a></p>\n\n<h2 id=\"tomoyo-linux\">TOMOYO Linux</h2>\n\n<p>ずっとSELinuxを導入しようと奮闘してきたが、幾つかビルドに失敗するものがあって、辛かった。ビルドに必要なライブラリ、ツールが分からんし、ちゃんとバージョンを指定してほしい。</p>\n\n<p><strong>[2020年6月11日更新]</strong> 試行錯誤した末、必要なパッケージが分かってビルドに成功した。 <a href=\"https://scrapbox.io/i544c/SELinux\">https://scrapbox.io/i544c/SELinux</a></p>\n\n<p>そんな中、TOMOYO Linuxを知ったので試すことにした。</p>\n\n<p><a href=\"https://scrapbox.io/i544c/TOMOYO_Linux\">https://scrapbox.io/i544c/TOMOYO_Linux</a></p>\n\n<p>（調べて分かったことなどは <a href=\"https://scrapbox.io/i544c\">https://scrapbox.io/i544c</a> に書くようにしている）</p>\n\n<p>VirtualBoxで環境を作って、色々試してみた。ポリシーをTUIで操作できるのが気持ちいい。</p>\n\n<p>試しにEmacsのプロセスをポリシー無しでenforce状態にしてみる。</p>\n\n<p><img src=\"/assets/img/Screenshot_2020-05-16_23-14-16.png\" alt=\"\" /></p>\n\n<p>※Emacsに恨みはありません</p>\n\n<p>これは単純な例だが、例えば特定のディレクトリ内での編集しか許可しないとか、ネットワーク通信を遮断するということもできる。</p>\n\n<p>特に有益な使い方としては、Apacheの設定ミスを防ぐために、Apacheのプロセスが/var/www/html以外にアクセスすることを拒否するというのがある。（起動に必要なファイルは許可する）。つまり、ディレクトリトラバーサルを防げる。また、Apacheのプロセスから指定したプロセス以外を起動させないことができるので、何かCGIなどで動作しているプログラムに脆弱性があったとしても、コマンドインジェクションを起こさない。</p>\n\n<p>もっとドキュメントを読み進めて、日常的に使うようになりたい。</p>","id":"https://default.cf/blog/2020/05/16/try-tomoyo-linux","link":"","published":"2020-05-16T00:00:00+09:00","updated":"2020-05-16T00:00:00+09:00","author":{"name":""},"title":"近況報告と、TOMOYO Linuxを導入しようとしている話"},{"author":{"name":""},"title":"PostgreSQL 9.3以降でセキュリティを疎かにすると、任意のコード実行できちゃうので気をつけよう","updated":"2020-01-31T00:00:00+09:00","published":"2020-01-31T00:00:00+09:00","link":"","id":"https://default.cf/blog/2020/01/31/postgresql-9-3-copy-command","content":"<p>はい。</p>\n\n<p>PostgreSQL 9.3から、COPYコマンドにある機能が追加されているようです。これは、コマンドの実行結果をレコードに挿入したり、レコードの結果をコマンドの標準入力として実行したりできるものです。詳しくは公式サイトの9.2と9.3の説明を見比べてみてください。</p>\n\n<p>9.2のCOPY <a href=\"https://www.postgresql.org/docs/9.2/sql-copy.html\">https://www.postgresql.org/docs/9.2/sql-copy.html</a><br />\n9.3のCOPY <a href=\"https://www.postgresql.org/docs/9.3/sql-copy.html\">https://www.postgresql.org/docs/9.3/sql-copy.html</a></p>\n\n<p>聡明な読者の皆さんはお気づきかと思いますが、<strong>外部からPostgreSQLにログインさえできれば</strong>、これを使って任意のコマンドが実行できるのです(ただしコマンドはPostgreSQL実行ユーザで実行されるので、そのユーザの権限で実行できる範囲に留まります)。</p>\n\n<p>これは仕様なので、脆弱性と言えるのかどうか…</p>\n\n<p><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2019-9193\">https://nvd.nist.gov/vuln/detail/CVE-2019-9193</a></p>\n\n<p>https://medium.com/greenwolf-security/authenticated-arbitrary-command-execution-on-postgresql-9-3-latest-cd18945914d5</p>\n\n<p>詳しく説明しているブログ</p>\n\n<p>とにかく、</p>\n\n<p><strong>PostgreSQLのポートを閉じていたり、PostgreSQLでユーザのログインできるIPアドレスをlocalhostに絞っていたりすれば、防げる話</strong>です。</p>\n\n<h2 id=\"マジで不必要なポートは閉じましょう\">マジで不必要なポートは閉じましょう。</h2>\n\n<p>必要最低限のポートだけを開けましょう。</p>\n\n<p>次の投稿では、セキュリティを意識したサーバの建て方を書きます、きっと。</p>","summary":"はい。"},{"author":{"name":""},"title":"2019年の自分を振り返る","published":"2019-12-31T00:00:00+09:00","updated":"2019-12-31T00:00:00+09:00","content":"<p>反省して、次に活かしたい。</p>\n\n<h3 id=\"勉強\">勉強</h3>\n\n<p>とにかく、大学の必修の講義を取れるよう頑張った。生活リズムを最低限正し、カップラーメンを食べるのをちょっと控えた。</p>\n\n<p>テスト前に徹夜で詰め込むのをやめ、日々の講義を真面目に受けるようになった。分からないことは友人に訊くようになった。そうすると、大変今更だが、大学の講義って面白いんだなと思うようになった。特に分散協調システムは、学部3年当時はプロジェクト学習などで真面目に受ける余裕などなかったが、今受けてみるととても勉強になる。</p>\n\n<p>大学図書館に篭って、それなりに本を読んだ。エンジニアの時間の使い方の本、デジタルアーカイブに関する本、SQLの本などなど…ちょっとしたエンジニアリング組織のリーダーだったりするので、チームギークを読んでより良い組織の作り方を学んだりした。</p>\n\n<h3 id=\"仕事\">仕事</h3>\n\n<p>学内バイト（ただし金銭は”報酬”として受け取るので、実質請け負い）は3つ掛け持つことになり、居場所が色々できて助かっている。</p>\n\n<p>更に、東京の企業2社から請け負って、開発を行っている。</p>\n\n<p>給与としてお金を貰う会社が今年は無いので、確定申告が必要になった。そのために、個人事業主になった。</p>\n\n<p>それなりに稼げたが、アイドルマスターシンデレラガールズ周りでほとんど消えた。特に現地でライブを楽しむようになったのがデカい。後悔はしていない。</p>\n\n<h3 id=\"趣味\">趣味</h3>\n\n<p><a href=\"https://scrapbox.io/i544c\">scrapbox.ioを使い始めた</a>。使い始めた経緯としては、ブログは自分的には日々過ぎ去る物事を書くもので、過去の記事を書き直したりしない感じがする。そこで、新しい情報を記し続ける場所があったらなと思っていて、今年試しにscrapboxを使ってみているという。</p>\n\n<p><a href=\"https://scrapbox.io/i544c/corne_chocolate%E3%82%92%E7%B5%84%E3%81%BF%E7%AB%8B%E3%81%A6%E3%82%8B\">初めて自作キーボードを作った</a>。左右分離でcolumn staggered配列なキーボードは良いぞ。</p>\n\n<h3 id=\"2020年は\">2020年は</h3>\n\n<p>勉強とバイトはそのままに、出費を極力抑える。2020年だけは、ライブ現地に行かず、青森の映画館でLVを観るだけで我慢する。だが円盤は買う。</p>\n\n<p>就活は早いうちに終わらせて、卒研に集中したい…</p>\n\n<p>大学図書館に篭もり、もっと本を読む。アーキテクチャ周りの知見をもっと深めたい。</p>","id":"https://default.cf/blog/2019/12/31/looking-back-on-2019","link":"","summary":"反省して、次に活かしたい。"},{"title":"大学生活でLinuxを使う","author":{"name":""},"published":"2019-12-12T00:00:00+09:00","updated":"2019-12-12T00:00:00+09:00","link":"","content":"<p>この記事は、<a href=\"https://adventar.org/calendars/4179\">FUN part2 Advent calendar 2019</a>の12月12日の記事です。</p>\n\n<h3 id=\"誰\">誰</h3>\n\n<p><a href=\"https://scrapbox.io/i544c/i544c\">https://scrapbox.io/i544c/i544c</a></p>\n\n<p>公立はこだて未来大学複雑系知能学科知能システムコース4年の者です。学部3年を2回やっていて、学部4年をあと1回します。みんなは、朝ちゃんと起きて数学をやろうな。</p>\n\n<p>で、私は大学でも仕事でも私生活でも、Arch Linuxを使っています。その良さを今回は書きます。</p>\n\n<h3 id=\"何故\">何故</h3>\n\n<p>何故Linuxを使うのか。それは、隅から隅までカスタマイズしたいから。</p>\n\n<p>だって、文句言いながらも使い続けるしかないって、不自由極まりない。Windowsだとアップデートが面倒だし、MacOSだと最近は深刻なバグの話をよく聞く。</p>\n\n<p>だったら、自分の好きな筐体に好きなOSをインストールすれば良い。</p>\n\n<p>私の場合は学部1年の時にLinuxに出会い、特にArch Linuxを気に入って、<a href=\"https://blog.i544c.me/2016/04/20/install-archlinux-on-macbookpro/\">当時持ってたMacBook Proに入れてデュアルブートしたり</a>した。その後、ThinkPadの良さに取り憑かれて、<a href=\"https://scrapbox.io/i544c/%E7%92%B0%E5%A2%83%E6%A7%8B%E7%AF%89\">ThinkPad T480sを買ってArchLinuxを入れて</a>、今使っている。これが最高なんだ。</p>\n\n<h3 id=\"どのように\">どのように</h3>\n\n<p>どのようにインストールし、どのように使うか。殆どは<a href=\"https://wiki.archlinux.jp/\">ArchWiki</a>に書いてある。</p>\n\n<p><a href=\"https://wiki.archlinux.jp/\">https://wiki.archlinux.jp/</a></p>\n\n<p>他のLinuxディストリビューションを使っていても、このサイトを参考にしたことのある人はそれなりに居るのではないだろうか。ソフトウェア名でググったりしているとよくArchWikiに出逢うと思う。</p>\n\n<p>それはArchWikiが巨大だから。ニッチなソフトウェアでも載っていたりする。みんなも還元していこうな。</p>\n\n<h3 id=\"windowsやmacosと比較する\">WindowsやMacOSと比較する</h3>\n\n<p>WindowsやMacでしかできないことって、実は殆ど無い。WordやExcelのファイルは、Web版のWord、Excelで大体済む。Webの時代最高。</p>\n\n<p>特に顕著にLinuxの良さを感じるのは、Dockerを利用した時。volumeを使用した時のIO周りは、どうしてもMacだと遅くなる。</p>\n\n<p>Linuxでできないのは、</p>\n\n<ul>\n  <li>Microsoft OfficeでWeb版と互換性の無い機能を使う時</li>\n  <li>iOS用のアプリケーションをビルドする時</li>\n</ul>\n\n<p>くらい。</p>\n\n<h3 id=\"まとめ\">まとめ</h3>\n\n<p>というわけで、みんなもLinuxユーザになろう。</p>\n\n<h3 id=\"おまけ\">おまけ</h3>\n\n<p><a href=\"https://fun-oauth.i544c.me\">https://fun-oauth.i544c.me</a></p>\n\n<p>未来大生用のOAuthサービスを作って動かしています。ここでユーザが未来大生であることを確認しているので、サービスに組み込むことでユーザを未来大生だけに制限できます。</p>\n\n<p><a href=\"http://adfun3m3yz3qlkvbkfjdbe4womooqceca4iffmnm2kxulgvao5wfcvyd.onion/\">http://adfun3m3yz3qlkvbkfjdbe4womooqceca4iffmnm2kxulgvao5wfcvyd.onion/</a></p>\n\n<p>サンプルのアプリケーションも作りました。未来大生向けの匿名日記サービスです。今のところ荒れていませんが、ヤバくなってきたら原因のユーザをBANしますし、場合によってはサービスごと止めます。</p>\n\n<p>本当はAdvent CalendarでOAuth2の話をしようとしたけれど、そんな話は巷に溢れているので変えました。</p>","id":"https://default.cf/blog/2019/12/12/use-linux-during-college-life","summary":"この記事は、FUN part2 Advent calendar 2019の12月12日の記事です。"}],"subtitle":"ヲタクな話を書きます。","generator":"Jekyll","updated":"2021-10-24T03:29:22+09:00","link":"","id":"https://default.cf/blog/feed.xml"}}